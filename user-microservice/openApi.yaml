openapi: "3.0.0"
info:
  title: Ecommerce User-Microservice
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: backend server

paths:
  /users/register:
    post:
      tags:
        - User
      summary: Create new user
      requestBody:
        description: payload data
        content:
            application/json:
              schema:
                  $ref: "#/components/schemas/userCreated"

      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/userCreated"

  /users/login:
    post:
      tags:
        - User
      summary: Sign in 
      requestBody:
        description: payload data
        content:
            application/json:
              schema:
                  $ref: "#/components/schemas/SignIn"
  
  


      responses:
        "201":
          description: User login successfully
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Login"
        "409":
          description: Email or Password is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Email is not registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "200":
          description: Invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string      

  /users/fetch:
    get:
      tags:
        - "User" 
      summary: Fetch all user 
      requestBody:
        description: payload data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login" 
      
      responses:
        "200":
          description: User Fetch successfully
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Login"
  
  /users/Update:
    put:
      tags:
        - "User" 
      summary: Update user 
      requestBody:
        description: payload data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login" 
      
      responses:
        "200":
          description: User Fetch successfully
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Login"
  
  /users/Delete:
    delete:
      tags:
        - "User" 
      summary: Delete user 
      requestBody:
        description: payload data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login" 
      
      responses:
        "200":
          description: User Fetch successfully
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Login"

  

components:
  schemas:
    userCreated:
     type: object
     properties:
      _id:
        type: string
      name:
        type: string
      email:
        type: string
      address:
        $ref: "#/components/schemas/address"
      phone:
        type: string
      password:
        type: string
      role:
        type: string
        "enum": [ "user", "vendor","delivery","superAdmin","vendorManager","deliveryManager"]
      
        
       
    users:
      type: object
      properties:
         name:
          type: string
         email:
          type: string
         address:
          $ref: "#/components/schemas/address"
         phone:
          type: string
         password:
          type: string
         role:
          type: string
          "enum": [ "user", "vendor","delivery","superAdmin","vendorManager","deliveryManager"]
      
            

    posts:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        content:
          type: string
        user_id:
          type: string
        time_stamp:
          type: string
    address:
      type: object
      properties:
        city:
            type: string
        region:
          type: string
        state:
          type: string
        country:
          type: string  
        zipCode:
          type: string
    geo:
      type: object
      properties:
        lat:
          type: string
        lng:
          type: string
    company:
      type: object
      properties:
        CompanyName:
          type: string
        catchPhrase:
          type: string
        bs:
          type: string
    SignIn:
       type: object
       properties:
        email:
          type: string
        password::
          type: string
    Login:
      type: object
      properties:
        success:
          type: string
        message:
          type: string
        user:
          type: object
          properties:
            email:
              type: string
        token:
          type: string      
        